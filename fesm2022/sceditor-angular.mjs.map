{"version":3,"file":"sceditor-angular.mjs","sources":["../../../projects/sceditor-angular/src/lib/script.service.ts","../../../projects/sceditor-angular/src/lib/keyup.service.ts","../../../projects/sceditor-angular/src/lib/sceditor/sceditor.component.ts","../../../projects/sceditor-angular/src/lib/sceditor/sceditor.component.html","../../../projects/sceditor-angular/src/lib/sceditor.module.ts","../../../projects/sceditor-angular/src/public-api.ts","../../../projects/sceditor-angular/src/sceditor-angular.ts"],"sourcesContent":["interface Scripts {\n    name: string;\n    src: string;\n}\n\nexport class ScriptService {\n\n    private scripts: any = {};\n\n    constructor(scriptStore: Scripts[]) {\n        scriptStore.forEach((script: any) => {\n            this.scripts[script.name] = {\n                loaded: false,\n                src: script.src\n            };\n        });\n    }\n\n    async load(...scripts: string[]) {\n        const promises: any[] = [];\n        for (const script of scripts) {\n            await this.loadScript(script);\n        }\n        return Promise.all(promises);\n    }\n\n    loadScript(name: string) {\n        return new Promise((resolve, reject) => {\n            // resolve if already loaded\n            if (this.scripts[name].loaded) {\n                resolve({ script: name, loaded: true, status: 'Already Loaded' });\n            } else {\n                // load script\n                const script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = this.scripts[name].src;\n                script.onload = () => {\n                    this.scripts[name].loaded = true;\n                    console.log(`${name} Loaded.`);\n                    resolve({ script: name, loaded: true, status: 'Loaded' });\n                };\n                script.onerror = (error: any) => resolve({ script: name, loaded: false, status: 'Loaded' });\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        });\n    }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class KeyupService {\n    private keyupSubject = new Subject<string>(); // or KeyboardEvent if needed\n    keyup$ = this.keyupSubject.asObservable();\n\n    emitKeyup(value: string) {\n        this.keyupSubject.next(value);\n    }\n}","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {ScriptService} from \"../script.service\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {Observable, of} from \"rxjs\";\nimport {KeyupService} from \"../keyup.service\";\n\n@Component({\n  selector: 'app-sceditor',\n  imports: [\n    ReactiveFormsModule\n  ],\n  templateUrl: './sceditor.component.html',\n  styleUrl: './sceditor.component.css'\n})\nexport class SceditorComponent implements OnInit, OnChanges {\n  @Input('id') id: string  = ''\n  @Input('mode') mode: string = 'default'\n  @Input('format') format: string = 'xhtml'\n  @Input('toolbar') toolbar: string = 'bold,italic,underline,strike,subscript,superscript|' +\n      'left,center,right,justify|' +\n      'font,size,color|' +\n      'removeformat|' +\n      'cut,copy,paste|' +\n      'pastetext,bulletlist,orderedlist,table,code,quote|' +\n      'horizontalrule|' +\n      'image,link,unlink|' +\n      'emoticon|'+\n      'source';\n  @Input('height') height: string|number = 100;\n  @Input('content') content: Observable<string|null> = of(null);\n  private scripts: any[] = []\n  private scriptService: ScriptService|null = null;\n\n  constructor(private keyupService: KeyupService) {\n  }\n\n  onKeyUp(event: KeyboardEvent) {\n    const value = (event.target as HTMLTextAreaElement).value;\n    this.keyupService.emitKeyup(value);\n  }\n\n  ngOnInit() {\n    let format_script = 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/formats/xhtml.min.js'\n    if (this.format == 'bbcode') {\n      format_script = 'https://cdn.jsdelivr.net/npm/sceditor@3/minified/formats/bbcode.min.js'\n    }\n    this.scripts = [\n      { name: 'main', src: 'https://cdn.jsdelivr.net/combine/npm/sceditor@latest/minified/sceditor.min.js,npm/sceditor@latest/minified/icons/monocons.min.js' },\n      { name: 'format', src: format_script }\n    ];\n    this.scriptService = new ScriptService(this.scripts);\n\n    let style = '/content-default.min.css';\n    if (this.mode == 'dark') {\n      style = '/content-dark.min.css'\n    }\n\n    this.scriptService.load('main', 'format').then(() => {\n      const textarea = document.getElementById(this.id);\n      // @ts-ignore\n      sceditor.create(textarea, {\n        icons: 'monocons',\n        format: this.format,\n        toolbar: this.toolbar,\n        style: style,\n        height: this.height,\n        emoticonsRoot: 'https://www.sceditor.com/',\n\n      });\n    })\n  }\n\n  ngOnChanges(changes: SimpleChanges): void\n  {\n    if(changes['content']) {\n      this.content.subscribe((content) => {\n        if(content == null) {return}\n        const textarea = document.getElementById(this.id);\n        // @ts-ignore\n        sceditor.instance(textarea).val(content);\n      })\n    }\n  }\n}\n","<textarea [id]=\"id\" (keyup)=\"onKeyUp($event)\"></textarea>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SceditorComponent} from \"./sceditor/sceditor.component\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SceditorComponent\n  ],\n  exports: [\n    SceditorComponent\n  ]\n})\nexport class SCEditorModule {\n  public static getValue(id: string): string {\n    const textarea = document.getElementById(id);\n    // @ts-ignore\n    return sceditor.instance(textarea).val();\n  }\n\n  public static setValue(id: string, value: string): string {\n    const textarea = document.getElementById(id);\n    // @ts-ignore\n    return sceditor.instance(textarea).val('');\n  }\n\n  public static setCSS(id:string ,css: string): void {\n    const textarea = document.getElementById(id);\n    // @ts-ignore\n    return sceditor.instance(textarea).css(css);\n  }\n}\n","/*\n * Public API Surface of sceditor-angular\n */\n\nexport * from './lib/script.service';\nexport * from './lib/keyup.service';\nexport * from './lib/sceditor.module';\nexport * from './lib/sceditor/sceditor.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.KeyupService"],"mappings":"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"}